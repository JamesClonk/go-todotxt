# Sort Priority test case
2013-02-22 Pick up milk @GroceryStore
x 2014-01-02 (B) 2013-12-30 Create golang library test cases @Go +go-todotxt
x (C) 2014-01-01 Create golang library documentation @Go +go-todotxt due:2014-01-12
(D) 2013-12-01 private:false Outline chapter 5 +Novel @Computer Level:5 due:2014-02-17
x 2014-01-03 Create golang library @Go +go-todotxt due:2014-01-05
(A) 2012-01-30 @Phone Call Mom @Call +Family

# Sort CreatedDate test case
x 2014-01-02 (B) 2013-12-30 Create golang library test cases @Go +go-todotxt
x 2014-01-03 Create golang library @Go +go-todotxt due:2014-01-05
2013-02-22 Pick up milk @GroceryStore
(A) @Phone Call Mom @Call +Family
x (C) 2014-01-01 Create golang library documentation @Go +go-todotxt due:2014-01-12

# Sort CompletedDate test case
x Download Todo.txt mobile app @Phone
x 2014-01-03 Create golang library @Go +go-todotxt due:2014-01-05
x (C) 2014-01-01 Create golang library documentation @Go +go-todotxt due:2014-01-12
x 2014-01-02 (B) 2013-12-30 Create golang library test cases @Go +go-todotxt
x 2014-01-04 2014-01-01 Create some more golang library test cases @Go +go-todotxt
2013-02-22 Pick up milk @GroceryStore

# Sort DueDate test case
(B) 2013-12-01 private:false Outline chapter 5 +Novel @Computer due:2014-02-17 Level:5 
x 2014-01-02 (B) 2013-12-30 Create golang library test cases @Go +go-todotxt
x 2014-01-03 due:2014-01-05 Create golang library @Go +go-todotxt 
x (C) 2014-01-01 Create golang library documentation @Go due:2014-01-12 +go-todotxt 
